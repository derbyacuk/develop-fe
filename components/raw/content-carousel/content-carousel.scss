// pictures used should be fixed at a 3x4 ratio (1.33) so this value is used for the sake of readability in calculations
$image-aspect-ratio: 1.33;

// the image and pattern backgrounds are positioned absolutely so that they can be overlapped by the panel itself
// but the panel might not be tall enough to show all of the background image. We need to set a min-height on the
// container panel to get around this. The min-height should always be the height of the image (and no more) and
// because we reliably know the viewport width and the aspect ratio of the image, we can work this out.
//
// 100% viewport width - (40px margin * 2) - 10px gutter = the available space of 16 columns
// available space divided into the number of columns = the image width
// image width * aspect ratio of 4/3 = the image height

$gutter: 10px;
$margin: $max-size; // max-size comes from the fluid-margins calculations elsewhere. but above ipad portrait this is always 40px
$max-width: 100vw;
$total-columns: 16;
$image-columns: 11;
$width-ratio: $image-columns / $total-columns;

// height = 100% viewport width * image aspect ratio - the margins either side of the image
$image-height-mobile: #{"calc(" + 100vw * $image-aspect-ratio + " + " + fluid-margin(true) + ")"};

// on tablet devices, the image width is 11 columns
// I'm sorry, 130px is a magic number to make this work and I don't know why.
$image-height-tablet: #{"calc((((" + $max-width + " - (130px)) * (" + $width-ratio + ")) - " + $gutter + ") * " +
    $image-aspect-ratio + ")"};

// on desktop devices, the image width is 9 columns
$image-columns: 6;
$width-ratio: $image-columns / $total-columns;
// I'm sorry, 60px is a magic number to make this work and I don't know why.
$image-height-desktop: #{"calc((((" + $max-width + " - (60px)) * (" + $width-ratio + ")) - " + $gutter + ") * " +
    $image-aspect-ratio + ")"};

// the grid is capped at 1700px wide, so above that screen size we need to cap our max width calculations by using a fixed px instead of viewport width
$max-width: 1780px;
// I'm sorry, 60px is a magic number to make this work and I don't know why.
$image-height-large-desktop: #{"calc((((" + $max-width + " - (60px)) * (" + $width-ratio + ")) - " + $gutter + ") * " +
    $image-aspect-ratio + ")"};


.panel-carousel.theme-purple {
    --carousel-background: var(--purple);
    --slide-gold: var(--pink);
    --slide-pink: var(--pink);
    --slide-green: var(--pink);
}

.panel-carousel {
    --carousel-background: var(--black);
    --slide-gold: var(--gold);
    --slide-pink: var(--pink);
    --slide-green: var(--green-blue);

    display: grid;
    grid-template-areas: "top" "bottom";
    grid-template-rows: auto auto;

    @include full-bleed-inset;

    &-container {
        z-index: 1;
        @include full-bleed;
        position: relative;
        align-self: center;
        align-items: center;
        display: flex;
    }

    &-background-container {
        @include background-container-full-bleed;
        background-color: var(--carousel-background);
    }

    &-background-img {
        position: absolute;
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    &-title {
        //@include full-bleed-inset;
        text-align: right;
        grid-area: top;
        
        h2 {
            font-size: responsive 80px 180px;
            font-range: $mobile-portrait $desktop;
            margin-bottom: 0;
            color: $white;
            position: relative;
        }

        .panel-carousel-title-bottom-left-align & {
            @include for-tablet-landscape-up {
                grid-area: bottom;
                text-align: left;
            }
        }
    }

    &-content {
        grid-area: bottom;
        //margin-top: $margin-small;
        margin-bottom: $margin-small;
        max-width: 100%;
        min-width: 100%;

        .panel-carousel-title-bottom-left-align & {
            @include for-tablet-landscape-up {
                grid-area: top;
                @include padding-medium("top");
            }
        }

        .panel-carousel-no-title & {
            @include padding-medium('top');
        }

        @include for-desktop-up {
            display: flex;
            align-items: top;
            justify-content: center;
            lost-utility: clearfix;
            margin-top: $margin-medium;
            margin-bottom: $margin-medium;
        }
    }

    &-panel {
        position: relative;
        max-width: 100%;
        margin-bottom: $margin-small;

        @include for-desktop-up {
            lost-offset: 0/16;
            lost-column: 4/16 0 0;
            padding-left: 12px;
        }

        .carousel-promo-title-bottom-left-align & {
            @include for-tablet-landscape-up {
                padding-bottom: 180px;
            }
        }

        &-inner {
            color: $white;
            margin-top: 1.125rem;
            @include for-desktop-up {
                margin-top: 0;
            }
    
            // for accessiblity we need to use an h2, but want it to look like an h3
            h2,
            .h2 {
                @extend .h3;
                color: $white;
            }

            p {
                line-height: 1.53;
            }
            .button {
                margin-bottom: 0px;
            }
        }
    }

    &-carousel-container {
        flex-grow: 1;
        margin-bottom: 0;
        color: $white;
        position: relative;
        display: grid;
        grid-template-columns: 1fr auto;
        width: 100%;

        @include for-desktop-up {
            lost-offset: 1/16;
            lost-column: 9/16;
            flex-grow: 1 !important;
        }

        .slide {

            display: grid;
            min-height: 100%;
            grid-template-rows: auto 1fr;
            background-image: none;

            h3 {
                color: white;
            }
        
            p {
                line-height: 1.53;
                border: none;
                color: white;
            }
            
            .slide-content {
                padding-left: $margin-extra-small;
                border-left: 3px solid var(--slide-green);
            }
        
            &.gold .slide-content {
                border-left: 3px solid var(--slide-gold);
            }
        
            &.pink .slide-content {
                border-left: 3px solid var(--slide-pink);
            }
        }

        a.carousel-control,
        a.carousel-control:link {
            display: none;

            @include for-tablet-portrait-up {
                display: block;
            }

            text-decoration: none;
            color: white;
            font-size: 30px;
            font-weight: bold;
            border: none;
            background: none;
            align-self: center;
            margin-right: 16px;
        }
    }
}
// when a panel promo follows a hero (if first in main content wrapper) counter the margin
.center-align > .panel-carousel-container:first-child(),
.center-align > .panel-carousel-container + .panel-carousel-container 
.center-align > .carousel-promo-container + .panell-promo-container {
    @include counter-margin-medium;

    @include for-tablet-portrait-up {
        @include counter-margin-large;
    }
}

.center-align > .panel-carousel-container:last-child() {
    @include for-largerthan-ipad-portrait {
        margin-bottom: -20px;
    }
}

section.carousel {
    position: relative;
    overflow: hidden;

    &:after {
        position: absolute;
        content: "";
        top: 0;
        bottom: 0;
        right: -30%;
        width: 15%;
        background-color: var(--carousel-background);
        box-shadow: -25px 0px 60px 70px var(--carousel-background);
        transform: rotate(-5deg);
        z-index: 2;

        @include for-tablet-portrait-up {
            right: -15%;
        }
    }

    &:before {
        position: absolute;
        content: "";
        top: 0;
        bottom: 0;
        right: -30%;
        width: 15%;
        background-color: var(--carousel-background);
        box-shadow: -25px 0px 30px 50px var(--carousel-background);
        transform: rotate(5deg);
        z-index: 2;

        @include for-tablet-portrait-up {
            right: -15%;
        }
    }
}

.owl-stage {
    display: flex;
}

.owl-item {
    flex-grow: 1;
}